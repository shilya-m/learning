1. Числа от 1 до 4095 переведены в HEХ, (1=1, 16=10, 160=A0, …4095=FFF). Сколько раз в HEХ последовательности чисел есть Буква A. Необходимо предоставить краткое логическое обоснование ответа
1+3*15+3*15*15=721. т.к. максимальное число 4095, то в 16-ичной системе это FFF, т.е. возможны ситуации AAA, AA*, A**. * - символ отличный от A, таких символов 15. т.к. максимум 3 символа в числе, то числе с двумя A: AA*, A*A, *AA, чисел с одной A: A**, *A*, **A.
2. Предложите алгоритм, который обнуляет столбец N и строку M матрицы, если элемент в ячейке (N, M) нулевой. Желательно минимизировать затраты памяти и время работы.
Заводим два множества: строк и столбцов, которые будем обнулять. Проходим по матрице и сравниваем элементы с нулем, если элемент нулевой, то добавляем в множество строк текущую строку, в множество столбцов -  текущий столбец.
После обхода всей матрицы обнуляем все строки и столбцы из наших множеств. Пояснение: множество - не содержит повторяющихся элементов, в этом его отличие от массива.
3. Разработайте решение, обнаруживающее в последовательности чисел все пары чисел, сумма которых равна заданному значению, не используя массивы и хэш-функции.
Пусть A0, A1, ...An - последовательсность, N - заданная сумма. Запустим цикл c i = 0 до n-1, Ai - первое число, будем искать число равное K = N-Ai, запускаем цикл с j = i+1 до n. Если Aj == K, то мы нашли пару Ai, Aj, сумма которых N, сохраняем/выводим на экран найденную пару
4. У вас неожиданно появились свободные деньги, и вы решили их выгодно вложить. Увы, за свою жизнь вы убедились, что для ведения собственного бизнеса у вас нет способностей, и вы решили вложить деньги в надёжные инвестиционные проекты. Вы рассмотрели представленные заявки и выбрали N проектов, в которые можно вложить свои деньги без риска их потерять. Объём инвестиций в i-й проект (1 ⩽ i ⩽ N) составляет Di, а доход, который вы рассчитываете получить после реализации этого проекта, равен Ti. Максимальный объём ваших инвестиций равен M. К сожалению, все выбранные проекты начинаются одновременно, так что доход, полученный от одного проекта, инвестировать в другой нельзя... Кроме того, инвестировать в один проект более одного раза запрещается. Определите максимальный доход, который вы сможете получить после реализации всех проектов, в которые вы вложили деньги. Граничные условия 1 ⩽ N ⩽ 1000, 1 ⩽ M ⩽ 1 000 000 000 1 ⩽ Di ⩽ 1 000 000 .Ti – константа, Di < Ti ⩽ Di + 100
N*100
5. Дана строка, состоящая из ASCII символов. Длина строки от 1000 до 32000 символов. Описать алгоритм поиска есть ли повторяющиеся символы в строке
ascii символов всего 256, заведём массив из 256 нулей, i-ый элемент массива будет соответствовать символу с кодом i из ASCII таблицы. Идём по строке и смотрим на каждый элемент строки, по коду символа кладем в наш массив +1. После того, как прошли всю строку наш массив будет допустим вида: 0,2,1,0,10,..... Т.е символ с кодом 0 встретился 0 раз, с кодом 1 - 2 раза, с кодом 2-1 раз, с кодом 3 - 0 раз. Нам нужно вывести все символы, которые встречались 2 и более раз


1. В чем разница COUNT(*) и COUNT(колонка)
Count(*) подсчитает NULL значения
2. Что такое NULL и какой его тип?
незаданное/пустое значение
3. Какое отличие DISTINCT и GROUP BY
DISTINCT - убирает дублирующиеся значения, только уникальные, group by группирует по равным значениям
4. Что такое триггер
событие, которое срабатывает после изменения данных в таблице (удаление, вставка,изменение)
5. Какие вы знаете виды (joins )соединений и кратко опишите их
left join, right join, inner join. значений из двух таблиц, left - все значения из первой и непустые из второй, right - все значения из второй (по порядку) таблицы и непустые из первой, join - непустые из обеих 
6. Что такое транзакция?
операция по изменению базы данных. Вставили новую запись, удалили существующую запись - это всё транзакции


Задания по SQL
Задача N1. В таблице T_SALARY имеются данные о зарплатах работников предприятия. Данные детализированы по работнику с указанием департамента, суммы зарплаты.

В таблице T_SALARY найти: ID работников с максимальной зарплатой в каждом департаменте
select ID_EMPL from T_SALARY groub by ID_DEP order by ZP desc
В таблице T_SALARY найти: ID работников с тремя наибольшими зарплатами в каждом департаменте
select ID_EMPL from T_SALARY groub by ID_DEP order by ZP desc limit 3
В таблице T_SALARY найти: Топ 5 департаментов с наибольшими расходами на зарплату сотрудникам.
r
Задача N2. Есть таблица OFFERS, отражающая изменения цены по времени и агентам. agent (FK) — кто предлагает, price — цена, since — дата начала предложения по цене. Агенты могут только раз в день менять свои предложения. Если снимают - цена NULL.

Из таблицы OFFERS вывести список минимальных цен по периодам, в которых было хотя бы одно предложение.
Задача N3. Представлены 2 таблицы в базе данных продаж.

Написать запрос, который выдаст имена (Customer.Name) ВСЕХ клиентов из таблицы Customer , идентификаторы (Sales.id) и суммы покупок (Sales.Summ) из таблицы Sales, если покупки были.
Написать запрос, который выдаст имена (Customer.Name) только тех клиентов из таблицы Customer, которые совершили покупки и идентификаторы (Sales.id) и суммы покупок (Sales.Summ) из таблицы Sales.
Вывести имя клиента, который совершил покупок на наибольшую сумму, и сумму его покупок

Задача N1. В таблице T_SALARY имеются данные о зарплатах работников предприятия. Данные детализированы по работнику с указанием департамента, суммы зарплаты.

В таблице T_SALARY найти: ID работников с максимальной зарплатой в каждом департаменте
В таблице T_SALARY найти: ID работников с тремя наибольшими зарплатами в каждом департаменте
В таблице T_SALARY найти: Топ 5 департаментов с наибольшими расходами на зарплату сотрудникам.
Задача N2. Есть таблица OFFERS, отражающая изменения цены по времени и агентам. agent (FK) — кто предлагает, price — цена, since — дата начала предложения по цене. Агенты могут только раз в день менять свои предложения. Если снимают - цена NULL.

Из таблицы OFFERS вывести список минимальных цен по периодам, в которых было хотя бы одно предложение.
Задача N3. Представлены 2 таблицы в базе данных продаж.

Написать запрос, который выдаст имена (Customer.Name) ВСЕХ клиентов из таблицы Customer , идентификаторы (Sales.id) и суммы покупок (Sales.Summ) из таблицы Sales, если покупки были.
Написать запрос, который выдаст имена (Customer.Name) только тех клиентов из таблицы Customer, которые совершили покупки и идентификаторы (Sales.id) и суммы покупок (Sales.Summ) из таблицы Sales.
Вывести имя клиента, который совершил покупок на наибольшую сумму, и сумму его покупок
